#!/usr/bin/env bash
set -euo pipefail

# Where to create the fixtures (default: current dir)
ROOT="${1:-.}"
mkdir -p "$ROOT"

# --- creditcards.txt (should BLOCK: valid Luhn numbers) ---
cat > "$ROOT/creditcards.txt" <<'EOF'
Card Type,Card Number,Expiry Date,CVV/CVC
American Express,371449635398431,03/2030,7373
American Express,370000000000002,03/2030,7373
American Express,37000000100018,03/2030,7373
Bancontact / Maestro,6703444444444449,03/2030,
Bancontact / Visa,4871049999999910,03/2030,737
Cartes Bancaires / Visa Debit,4035501428146300,03/2030,737
Cartes Bancaires,4360000001000005,03/2030,737
Cartes Bancaires / Mastercard,5130290000000009,03/2030,737
China UnionPay (Credit),6250947000000014,03/2030,123
China UnionPay (Debit),6250946000000016,03/2030,123
China UnionPay ExpressPay,8171999927660000,10/2030,737
China UnionPay ExpressPay,8171999900000000021,10/2030,737
China UnionPay ExpressPay,6243030000000001,12/2029,737
Diners,30569309025904,03/2030,737
Diners,36006666333344,03/2030,737
Diners,36070500001020,03/2030,737
Discover,6011111111111117,03/2030,737
Discover,6011601111116611,03/2030,737
Discover,6445644564444545,03/2030,737
Eftpos,4687380100010006,03/2030,737
Elo,5066991111111118,03/2030,737
Hipercard,6062828888666688,03/2030,737
JCB,3566111111111113,03/2030,737
JCB,3569990010095841,03/2030,737
Maestro,5000550000000029,03/2030,
Maestro,6771798021000008,03/2030,737
Maestro,6771798021000016,03/2030,
Mastercard,5454545454545454,03/2030,737
Mastercard Credit,2222400010000008,03/2030,737
Mastercard Commercial Debit,2222400070000005,03/2030,737
Mastercard Consumer,5555341244441115,03/2030,737
Mastercard Consumer,5577000055770004,03/2030,737
Mastercard Consumer,5555444433331111,03/2030,737
Mastercard Corporate,2222410740360010,03/2030,737
Mastercard Credit,5555555555554444,03/2030,737
Mastercard Corporate Credit,2222410700000002,03/2030,737
Mastercard Credit,2222400010000008,03/2030,737
Mastercard Credit,2223000048410010,03/2030,737
Mastercard Debit,2222400060000007,03/2030,737
Mastercard Debit,2223520443560010,03/2030,737
Mastercard Fleet Credit,2222400030000004,03/2030,737
Mastercard Premium Credit,5100060000000002,12/2029,737
Mastercard Purchasing Credit,2222400050000009,03/2030,737
Mastercard Prepaid,5103221911199245,03/2030,737
UATP,135410014004955,03/2030,
US Debit Visa,4400002000000004,03/2030,737
US Debit Visa,4000033003300335,03/2030,737
US Debit Mastercard,5002510000000013,03/2030,737
US Debit Mastercard,5413330033003303,03/2030,737
US Debit Discover,6011609900000003,03/2030,737
US Debit Discover,6445645000000002,03/2030,737
Visa Classic,4111111145551142,03/2030,737
Visa Debit,4111112014267661,12/2030,737
Visa Classic,4988438843884305,03/2030,737
Visa Classic,4166676667666746,03/2030,737
Visa Classic,4646464646464644,03/2030,737
Visa Commercial Credit,4000620000000007,03/2030,737
Visa Commercial Debit,4000060000000006,03/2030,737
Visa Commercial Premium Credit,4293189100000008,03/2030,737
Visa Commercial Premium Debit,4988080000000000,03/2030,737
Visa Consumer,4111111111111111,03/2030,737
Visa Corporate,4444333322221111,03/2030,737
Visa Corporate Credit,4001590000000001,03/2030,737
Visa Corporate Debit,4000180000000002,03/2030,737
Visa Credit,4000020000000000,03/2030,737
Visa Debit,4000160000000004,03/2030,737
Visa Debit,4002690000000008,03/2030,737
Visa Debit,4400000000000008,03/2030,737
Visa Fleet Credit,4484600000000004,03/2030,737
Visa Fleet Debit,4607000000000009,03/2030,737
Visa Gold,4977949494949497,03/2030,737
Visa Premium Credit,4000640000000005,03/2030,737
Visa Premium Credit,4003550000000003,03/2030,737
Visa Premium Debit,4000760000000001,03/2030,737
Visa Premium Debit,4017340000000003,03/2030,737
Visa Purchasing Credit,4005519000000006,03/2030,737
Visa Purchasing Debit,4131840000000003,03/2030,737
Visa,4035501000000008,03/2030,737
Visa Credit,4151500000000008,03/2030,737
Visa Proprietary,4199350000000002,03/2030,737
Visa Electron,4001020000000009,03/2030,737
V Pay,4013250000000000006,03/2030,737
EOF

# --- aws_keys.txt (should BLOCK: AKIA...) ---
cat > "$ROOT/aws_keys.txt" <<'EOF'
Here are some example AWS Access Key IDs (fake):
AKIAEXAMPLE1234567890,wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
AKIAEXAMPLE0987654321,abcdEFGHijklMNOPqrstUVWXyz0123456789ABCD
ASIAEXAMPLE1111222233,1234abcd5678EFGHijklMNOPqrstUVWXyzABCD12
AKIAEXAMPLE5555666677,ZXCVbnmASDFghjkQWERtyuiOPLKJHGFDSAZXCV1234
EOF

# --- bank_accounts.txt (may BLOCK depending on threshold) ---
cat > "$ROOT/bank_accounts.txt" <<'EOF'
Sample account-like numbers:
# UK Bank Accounts and Sort Codes
SortCode,AccountNumber
12-34-56,12345678
01-23-45,87654321
23-45-67,23456789
34-56-78,98765432
45-67-89,34567890
56-78-90,45678901
67-89-01,56789012
78-90-12,67890123
89-01-23,78901234
90-12-34,89012345
11-22-33,11223344
22-33-44,22334455
33-44-55,33445566
44-55-66,44556677
55-66-77,55667788

# US Bank Accounts
RoutingNumber,AccountNumber
021000021,123456789
011000015,987654321
031100209,234567890
121000358,876543210
026009593,345678901
111000025,567890123
123456789,678901234
011900571,789012345
061000104,890123456
021001088,901234567
041000124,012345678
031202084,123098456
101000187,234109876
111900659,345210987
061000104,456321098

EOF

# --- sort_codes.txt (should PASS for dates, BLOCK for real sort codes) ---
cat > "$ROOT/sort_codes.txt" <<'EOF'
Likely dates (should PASS date filter):
23-04-20
1-1-24
31/12/23

UK sort codes (should be flagged unless allowed):
# UK Bank Accounts and Sort Codes
SortCode,AccountNumber
12-34-56,12345678
01-23-45,87654321
23-45-67,23456789
34-56-78,98765432
45-67-89,34567890
56-78-90,45678901
67-89-01,56789012
78-90-12,67890123
89-01-23,78901234
90-12-34,89012345
11-22-33,11223344
22-33-44,22334455
33-44-55,33445566
44-55-66,44556677
55-66-77,55667788

# US Bank Accounts
RoutingNumber,AccountNumber
021000021,123456789
011000015,987654321
031100209,234567890
121000358,876543210
026009593,345678901
111000025,567890123
123456789,678901234
011900571,789012345
061000104,890123456
021001088,901234567
041000124,012345678
031202084,123098456
101000187,234109876
111900659,345210987
061000104,456321098

EOF

# --- phone_numbers.txt (may BLOCK depending on threshold) ---
cat > "$ROOT/phone_numbers.txt" <<'EOF'
# UK Phones
+447911123456
+447812345678
+447700900123
07911123456
07123456789
07234567890
07345678901
07456789012
07567890123
07678901234
07789012345
07890123456
07901234567
07111222333
07222333444

# US Phones
+12025550123
+13105551234
+14155552345
2025550123
3125551234
4155552345
2025553456
3125554567
4155555678
2025556789
3125557890
4155558901
2025559012
3125550123
4155551234

+447911123456
07911123456
0000337840  # might match depending on pattern; useful to verify tuning
EOF

# --- emails_3.txt (should PASS: <= 5 emails) ---
cat > "$ROOT/emails_3.txt" <<'EOF'
test1@example.com
test2@example.com
test3@example.com
EOF

# --- emails_6.txt (should BLOCK: > 5 emails) ---
cat > "$ROOT/emails_6.txt" <<'EOF'
a1@ex.com
a2@ex.com
a3@ex.com
a4@ex.com
a5@ex.com
a6@ex.com
EOF


# --- national_ids.txt (should BLOCK: looks like NI/SSN) ---
cat > "$ROOT/national_ids.txt" <<'EOF'
# UK National Insurance numbers (valid format)
AB123456C
QQ123456A
ZZ987654D

# US Social Security Numbers
123-45-6789
987-65-4320
111-22-3333
EOF




# --- api_keys.txt (should BLOCK: looks like secrets/tokens) ---
cat > "$ROOT/api_keys.txt" <<'EOF'
# Google API key style
AIzaSyD4fke2aEXAMPLEKEY1234567890abcde

# GitHub Personal Access Token (classic format)
ghp_1234567890abcdef1234567890abcdef1234

# GitHub fine-grained token
github_pat_11AABBCCDDEE11223344556677889900AABBCC

# Slack Bot Token
xoxb-123456789012-1234567890123-AbCdEfGhIjKlMnOpQrStUvWx

# JWT (fake example, 3 parts base64 separated by '.')
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiZGVtb3VzZXIifQ.sRvu7QhzUqk7fXzQjN1W9g0f7QXz0KjUo1V1oEXAMPLE
EOF





# --- safe.txt (should PASS) ---
cat > "$ROOT/safe.txt" <<'EOF'
This is a safe file with no sensitive data.
EOF

echo "âœ… Test fixtures written to: $ROOT"

